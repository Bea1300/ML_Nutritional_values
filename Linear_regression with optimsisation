import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import SGDRegressor
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
from sklearn.preprocessing import StandardScaler


# Load the dataset into a Pandas DataFrame
dataset_path = 'dataset/food.csv'
df = pd.read_csv(dataset_path)

X = df.drop(['Data.Kilocalories', 'Description', 'Nutrient Data Bank Number'], axis=1)
y = df['Data.Kilocalories']
X['bias'] = 1

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Standardize the data
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Initialize SGDRegressor
model = SGDRegressor(learning_rate='constant', eta0=0.01, max_iter=1000, random_state=42)

# Fit the model using gradient descent
model.fit(X_train_scaled, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test_scaled)

# Calculate residuals
residuals = y_test - y_pred

# Plotting residuals
plt.scatter(y_test, residuals)
plt.axhline(y=0, color='red', linestyle='--', label='Zero Residuals')
plt.xlabel("Actual Values")
plt.ylabel("Residuals")
plt.title("Residual Plot (SGDRegressor)")
plt.legend()
plt.show()
